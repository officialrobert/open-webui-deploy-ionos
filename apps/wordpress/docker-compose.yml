version: '3.8'

services:
  # MySQL Database (Shared)
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress_password
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - wordpress_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # App A - WordPress + Custom REST API Plugin
  app_a:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: wordpress_a
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress_password
      WORDPRESS_TABLE_PREFIX: wp_a_
      WORDPRESS_DEBUG: 0
      WORDPRESS_PORT: 3000
      WORDPRESS_URL: http://localhost:3000
      WORDPRESS_TITLE: WordPress App A
      WORDPRESS_ADMIN_USER: admin
      WORDPRESS_ADMIN_PASSWORD: admin
      WORDPRESS_ADMIN_EMAIL: admin@example.com
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_HOME', 'http://localhost:3000');
        define('WP_SITEURL', 'http://localhost:3000');
        define('WP_DEBUG', false);
        define('WP_DEBUG_LOG', false);
    volumes:
      - app_a_data:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    networks:
      - wordpress_network

  # App B - WordPress + Custom REST API Plugin
  app_b:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3001:3001"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: wordpress_b
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress_password
      WORDPRESS_TABLE_PREFIX: wp_b_
      WORDPRESS_DEBUG: 0
      WORDPRESS_PORT: 3001
      WORDPRESS_URL: http://localhost:3001
      WORDPRESS_TITLE: WordPress App B
      WORDPRESS_ADMIN_USER: admin
      WORDPRESS_ADMIN_PASSWORD: admin
      WORDPRESS_ADMIN_EMAIL: admin@example.com
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_HOME', 'http://localhost:3001');
        define('WP_SITEURL', 'http://localhost:3001');
        define('WP_DEBUG', false);
        define('WP_DEBUG_LOG', false);
    volumes:
      - app_b_data:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    networks:
      - wordpress_network

  # App C - WordPress + Custom REST API Plugin
  app_c:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3002:3002"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: wordpress_c
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress_password
      WORDPRESS_TABLE_PREFIX: wp_c_
      WORDPRESS_DEBUG: 0
      WORDPRESS_PORT: 3002
      WORDPRESS_URL: http://localhost:3002
      WORDPRESS_TITLE: WordPress App C
      WORDPRESS_ADMIN_USER: admin
      WORDPRESS_ADMIN_PASSWORD: admin
      WORDPRESS_ADMIN_EMAIL: admin@example.com
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_HOME', 'http://localhost:3002');
        define('WP_SITEURL', 'http://localhost:3002');
        define('WP_DEBUG', false);
        define('WP_DEBUG_LOG', false);
    volumes:
      - app_c_data:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    networks:
      - wordpress_network

  # phpMyAdmin (optional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8081:8081"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: wordpress
      PMA_PASSWORD: wordpress_password
    depends_on:
      - db
    networks:
      - wordpress_network

volumes:
  db_data:
    driver: local
  app_a_data:
    driver: local
  app_b_data:
    driver: local
  app_c_data:
    driver: local

networks:
  wordpress_network:
    driver: bridge
