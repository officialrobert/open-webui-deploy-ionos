{
  "name": "wordpress-docker-dev",
  "version": "1.0.0",
  "description": "WordPress Docker Development Environment with Custom REST API Plugin",
  "main": "index.js",
  "scripts": {
    "dev": "node scripts/dev.js",
    "dev:detach": "docker-compose -f docker-compose.dev.yml up -d --build",
    "dev:logs": "docker-compose -f docker-compose.dev.yml logs -f",
    "dev:stop": "docker-compose -f docker-compose.dev.yml down",
    "dev:restart": "docker-compose -f docker-compose.dev.yml restart",
    "dev:clean": "docker-compose -f docker-compose.dev.yml down -v --remove-orphans",
    "prod": "node scripts/prod.js",
    "prod:detach": "docker-compose up -d --build",
    "prod:logs": "docker-compose logs -f",
    "prod:stop": "docker-compose down",
    "prod:restart": "docker-compose restart",
    "prod:clean": "docker-compose down -v --remove-orphans",

    "test:api": "node scripts/test-api.js",
    "test:api:health": "node scripts/test-api.js --endpoint=health",
    "test:api:posts": "node scripts/test-api.js --endpoint=posts",
    "test:api:users": "node scripts/test-api.js --endpoint=users",
    "test:api:node-data": "node scripts/test-api.js --endpoint=node-data",
    "test:api:verbose": "node scripts/test-api.js --verbose",
    "test:api:app-a": "node scripts/test-api.js --app=app_a",
    "test:api:app-b": "node scripts/test-api.js --app=app_b",
    "test:api:app-c": "node scripts/test-api.js --app=app_c",
    "build:plugin": "cd wp-content/plugins/custom-rest-api && npm run build",
    "watch:plugin": "cd wp-content/plugins/custom-rest-api && npm run watch",
    "install:plugin": "cd wp-content/plugins/custom-rest-api && npm install",
    "status": "docker-compose ps",
    "status:dev": "docker-compose -f docker-compose.dev.yml ps",
    "shell:app-a": "docker-compose exec app_a bash",
    "shell:app-b": "docker-compose exec app_b bash",
    "shell:app-c": "docker-compose exec app_c bash",
    "shell:app-a:dev": "docker-compose -f docker-compose.dev.yml exec app_a bash",
    "shell:app-b:dev": "docker-compose -f docker-compose.dev.yml exec app_b bash",
    "shell:app-c:dev": "docker-compose -f docker-compose.dev.yml exec app_c bash",
    "db:shell": "docker-compose exec db mysql -u wordpress -pwordpress_password",
    "db:shell:dev": "docker-compose -f docker-compose.dev.yml exec db mysql -u wordpress -pwordpress_password",
    "logs:app-a": "docker-compose logs app_a",
    "logs:app-b": "docker-compose logs app_b",
    "logs:app-c": "docker-compose logs app_c",
    "logs:app-a:dev": "docker-compose -f docker-compose.dev.yml logs app_a",
    "logs:app-b:dev": "docker-compose -f docker-compose.dev.yml logs app_b",
    "logs:app-c:dev": "docker-compose -f docker-compose.dev.yml logs app_c",
    "logs:db": "docker-compose logs db",
    "logs:db:dev": "docker-compose -f docker-compose.dev.yml logs db",

    "clean:all": "docker system prune -f && docker volume prune -f",
    "reset:dev": "npm run dev:clean && npm run dev",
    "reset:prod": "npm run prod:clean && npm run prod",
    "startup:test": "node start-wordpress.js",
    "help": "echo 'Available commands:' && npm run"
  },
  "keywords": [
    "wordpress",
    "docker",
    "development",
    "rest-api",
    "typescript",
    "plugin"
  ],
  "author": "Your Name",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "your-repository-url"
  },
  "bugs": {
    "url": "your-repository-url/issues"
  },
  "homepage": "your-repository-url#readme"
}
